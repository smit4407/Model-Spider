import os
import torch


IN1K_CLASSES = 1000

# Get the value of the environment variable
DATA_PATH_PREFIX = os.environ.get("PATH_TO_SRC_DATA")
# DATA_PATH_PREFIX = '/data/zhangyk/data'
DATA_PATHS = {
    'ImageNet': f'{DATA_PATH_PREFIX}/imagenet',
    'CIFAR10': f'{DATA_PATH_PREFIX}/cifar10',
    'CIFAR100': f'{DATA_PATH_PREFIX}/cifar100',
    'Aircraft': f'{DATA_PATH_PREFIX}/aircraft',
    'Caltech101': f'{DATA_PATH_PREFIX}/caltech101/caltech-101',
    'Cars': f'{DATA_PATH_PREFIX}/cars',
    'CUB2011': f'{DATA_PATH_PREFIX}/cub2011',
    'Dogs': f'{DATA_PATH_PREFIX}/dogs',
    'DomainNet': f'{DATA_PATH_PREFIX}/domainnet',
    'DTD': f'{DATA_PATH_PREFIX}/dtd',
    'EuroSAT': f'{DATA_PATH_PREFIX}/eurosat',
    'Flowers': f'{DATA_PATH_PREFIX}/flowers',
    'Food': f'{DATA_PATH_PREFIX}/food/food-101',
    'NABirds': f'{DATA_PATH_PREFIX}/nabirds',
    'OfficeHome': f'{DATA_PATH_PREFIX}/officehome',
    'PACS': f'{DATA_PATH_PREFIX}/pacs',
    'Pet': f'{DATA_PATH_PREFIX}/pet',
    'SmallNORB': f'{DATA_PATH_PREFIX}/smallnorb',
    'STL10': f'{DATA_PATH_PREFIX}/stl10',
    'SUN397': f'{DATA_PATH_PREFIX}/sun397',
    'SVHN': f'{DATA_PATH_PREFIX}/svhn',
    'VLCS': f'{DATA_PATH_PREFIX}/vlcs',
    'FFCV-ImageNet': f'{DATA_PATH_PREFIX}/imagenet',
    'Resisc45': f'{DATA_PATH_PREFIX}/NWPU-RESISC45',
    'AID': f'{DATA_PATH_PREFIX}/AID',
    'PCAM': f'{DATA_PATH_PREFIX}/pcam',
    'DomainNet-clipart': f'{DATA_PATH_PREFIX}/domainnet',
    'DomainNet-infograph': f'{DATA_PATH_PREFIX}/domainnet',
    'DomainNet-painting': f'{DATA_PATH_PREFIX}/domainnet',
    'DomainNet-quickdraw': f'{DATA_PATH_PREFIX}/domainnet',
    'DomainNet-real': f'{DATA_PATH_PREFIX}/domainnet',
    'DomainNet-sketch': f'{DATA_PATH_PREFIX}/domainnet',
    'dSprites': f'{DATA_PATH_PREFIX}/dsprites',
    'UTKFace': f'{DATA_PATH_PREFIX}/utkface/imgs',
}

CN_DICT = {
    'c0': 'Dogs_Flowers_w100s50_hh_c0',
    'c1': 'CUB2011_STL10_w100s50_hh_c1',
    'c2': 'EuroSAT_PACS_w100s50_hh_c2',
    'c3': 'Dogs_SmallNORB_w100s50_hh_c3',
    'c4': 'PACS_VLCS_w100s50_hh_c4',
    'c5': 'Flowers_OfficeHome_w100s50_hh_c5',
    'c6': 'Flowers_SmallNORB_w100s50_hh_c6',
    'c7': 'CUB2011_EuroSAT_w100s50_hh_c7',
    'c8': 'Flowers_VLCS_w100s50_hh_c8',
    'c9': 'OfficeHome_SmallNORB_w100s50_hh_c9',
    'c10': 'EuroSAT_VLCS_w100s50_hh_c10',
    'c11': 'CUB2011_Flowers_w100s50_hh_c11',
    'c12': 'PACS_SmallNORB_w100s50_hh_c12',
    'c13': 'CUB2011_SmallNORB_w100s50_hh_c13',
    'c14': 'STL10_SmallNORB_w100s50_hh_c14',
    'c15': 'Flowers_PACS_w100s50_hh_c15',
    'c16': 'OfficeHome_PACS_w100s50_hh_c16',
    'c17': 'EuroSAT_STL10_w100s50_hh_c17',
    'c18': 'Dogs_EuroSAT_w100s50_hh_c18',
    'c19': 'OfficeHome_VLCS_w100s50_hh_c19',
    'c20': 'Flowers_STL10_w100s50_hh_c20',
    'c21': 'PACS_STL10_w100s50_hh_c21',
    'c22': 'Dogs_VLCS_w100s50_hh_c22',
    'c23': 'CUB2011_VLCS_w100s50_hh_c23',
    'c24': 'STL10_VLCS_w100s50_hh_c24',
    'c25': 'CUB2011_PACS_w100s50_hh_c25',
    'c26': 'Dogs_STL10_w100s50_hh_c26',
    'c27': 'Dogs_PACS_w100s50_hh_c27',
    'c28': 'Dogs_OfficeHome_w100s50_hh_c28',
    'c29': 'OfficeHome_STL10_w100s50_hh_c29',
    'c30': 'CUB2011_OfficeHome_w100s50_hh_c30',
    'c31': 'SmallNORB_VLCS_w100s50_hh_c31',
    'c32': 'EuroSAT_OfficeHome_VLCS_w100s50_hh_c32',
    'c33': 'CUB2011_OfficeHome_SmallNORB_w100s50_hh_c33',
    'c34': 'CUB2011_Flowers_SmallNORB_w100s50_hh_c34',
    'c35': 'Dogs_OfficeHome_PACS_w100s50_hh_c35',
    'c36': 'CUB2011_OfficeHome_STL10_w100s50_hh_c36',
    'c37': 'EuroSAT_PACS_SmallNORB_w100s50_hh_c37',
    'c38': 'OfficeHome_PACS_STL10_w100s50_hh_c38',
    'c39': 'Dogs_SmallNORB_VLCS_w100s50_hh_c39',
    'c40': 'EuroSAT_STL10_VLCS_w100s50_hh_c40',
    'c41': 'CUB2011_OfficeHome_PACS_w100s50_hh_c41',
    'c42': 'CUB2011_Flowers_VLCS_w100s50_hh_c42',
    'c43': 'OfficeHome_SmallNORB_VLCS_w100s50_hh_c43',
    'c44': 'CUB2011_Dogs_Flowers_w100s50_hh_c44',
    'c45': 'Dogs_PACS_SmallNORB_w100s50_hh_c45',
    'c46': 'Dogs_EuroSAT_OfficeHome_w100s50_hh_c46',
    'c47': 'Dogs_EuroSAT_STL10_w100s50_hh_c47',
    'c48': 'Flowers_SmallNORB_VLCS_w100s50_hh_c48',
    'c49': 'EuroSAT_Flowers_VLCS_w100s50_hh_c49',
    'c50': 'Flowers_OfficeHome_PACS_w100s50_hh_c50',
    'c51': 'Dogs_EuroSAT_PACS_w100s50_hh_c51',
    'c52': 'Dogs_Flowers_STL10_w100s50_hh_c52',
    'c53': 'Dogs_OfficeHome_VLCS_w100s50_hh_c53',
    'c54': 'Dogs_Flowers_PACS_w100s50_hh_c54',
    'c55': 'Dogs_EuroSAT_Flowers_w100s50_hh_c55',
    'c56': 'Dogs_EuroSAT_VLCS_w100s50_hh_c56',
    'c57': 'EuroSAT_OfficeHome_PACS_w100s50_hh_c57',
    'c58': 'CUB2011_Dogs_PACS_w100s50_hh_c58',
    'c59': 'STL10_SmallNORB_VLCS_w100s50_hh_c59',
    'c60': 'CUB2011_PACS_VLCS_w100s50_hh_c60',
    'c61': 'CUB2011_STL10_VLCS_w100s50_hh_c61',
    'c62': 'CUB2011_Flowers_PACS_w100s50_hh_c62',
    'c63': 'Flowers_OfficeHome_STL10_w100s50_hh_c63',
    'c64': 'Flowers_OfficeHome_PACS_SmallNORB_w100s50_hh_c64',
    'c65': 'CUB2011_Flowers_OfficeHome_SmallNORB_w100s50_hh_c65',
    'c66': 'CUB2011_OfficeHome_STL10_w100s50_hh_c66',
    'c67': 'CUB2011_Flowers_OfficeHome_PACS_w100s50_hh_c67',
    'c68': 'Dogs_Flowers_OfficeHome_PACS_w100s50_hh_c68',
    'c69': 'CUB2011_EuroSAT_Flowers_OfficeHome_w100s50_hh_c69',
    'c70': 'CUB2011_Dogs_Flowers_SmallNORB_w100s50_hh_c70',
    'c71': 'Dogs_EuroSAT_PACS_STL10_w100s50_hh_c71',
    'c72': 'CUB2011_Flowers_STL10_w100s50_hh_c72',
    'c73': 'EuroSAT_STL10_SmallNORB_VLCS_w100s50_hh_c73',
    'c74': 'CUB2011_Dogs_PACS_SmallNORB_w100s50_hh_c74',
    'c75': 'Dogs_Flowers_OfficeHome_VLCS_w100s50_hh_c75',
    'c76': 'CUB2011_Flowers_SmallNORB_VLCS_w100s50_hh_c76',
    'c77': 'CUB2011_Dogs_EuroSAT_OfficeHome_w100s50_hh_c77',
    'c78': 'Dogs_Flowers_STL10_VLCS_w100s50_hh_c78',
    'c79': 'CUB2011_OfficeHome_STL10_VLCS_w100s50_hh_c79',
    'c80': 'Flowers_OfficeHome_PACS_STL10_w100s50_hh_c80',
    'c81': 'Dogs_Flowers_PACS_SmallNORB_w100s50_hh_c81',
    'c82': 'Flowers_OfficeHome_PACS_VLCS_w100s50_hh_c82',
    'c83': 'CUB2011_OfficeHome_PACS_VLCS_w100s50_hh_c83',
    'c84': 'EuroSAT_Flowers_STL10_SmallNORB_w100s50_hh_c84',
    'c85': 'CUB2011_Dogs_OfficeHome_VLCS_w100s50_hh_c85',
    'c86': 'EuroSAT_OfficeHome_SmallNORB_VLCS_w100s50_hh_c86',
    'c87': 'CUB2011_Dogs_OfficeHome_STL10_w100s50_hh_c87',
    'c88': 'Dogs_EuroSAT_OfficeHome_PACS_w100s50_hh_c88',
    'c89': 'Dogs_OfficeHome_PACS_STL10_w100s50_hh_c89',
    'c90': 'CUB2011_Flowers_STL10_SmallNORB_w100s50_hh_c90',
    'c91': 'CUB2011_Dogs_Flowers_STL10_w100s50_hh_c91',
    'c92': 'Dogs_OfficeHome_SmallNORB_VLCS_w100s50_hh_c92',
    'c93': 'Dogs_Flowers_PACS_VLCS_w100s50_hh_c93',
    'c94': 'CUB2011_Dogs_STL10_w100s50_hh_c94',
    'c95': 'CUB2011_Dogs_PACS_STL10_w100s50_hh_c95',
    't127': 'NABirds_SUN397_w100s50_hh_t127',
    't128': 'Flowers_Food_w100s50_hh_t128',
    't129': 'CIFAR100_Flowers_w100s50_hh_t129',
    't130': 'Dogs_Food_w100s50_hh_t130',
    't131': 'Cars_Dogs_w100s50_hh_t131',
    't132': 'CIFAR100_Caltech101_w100s50_hh_t132',
    't133': 'CIFAR100_Food_w100s50_hh_t133',
    't134': 'Flowers_SVHN_w100s50_hh_t134',
    't135': 'NABirds_Resisc45_w100s50_hh_t135',
    't136': 'Dogs_EuroSAT_w100s50_hh_t136',
    't137': 'Caltech101_Flowers_w100s50_hh_t137',
    't138': 'Cars_Resisc45_w100s50_hh_t138',
    't139': 'CIFAR10_Food_w100s50_hh_t139',
    't140': 'Dogs_SUN397_w100s50_hh_t140',
    't141': 'Cars_NABirds_w100s50_hh_t141',
    't142': 'Cars_EuroSAT_w100s50_hh_t142',
    't143': 'PACS_SUN397_w100s50_hh_t143',
    't144': 'Caltech101_Resisc45_w100s50_hh_t144',
    't145': 'CIFAR100_SVHN_w100s50_hh_t145',
    't146': 'CIFAR10_SUN397_w100s50_hh_t146',
    't147': 'CIFAR100_PACS_w100s50_hh_t147',
    't148': 'Flowers_PACS_w100s50_hh_t148',
    't149': 'Cars_SVHN_w100s50_hh_t149',
    't150': 'CIFAR100_Cars_w100s50_hh_t150',
    't151': 'CIFAR10_Resisc45_w100s50_hh_t151',
    't152': 'Resisc45_SmallNORB_w100s50_hh_t152',
    't153': 'Food_SmallNORB_w100s50_hh_t153',
    't154': 'EuroSAT_Food_w100s50_hh_t154',
    't155': 'CIFAR100_EuroSAT_w100s50_hh_t155',
    't156': 'CIFAR10_PACS_w100s50_hh_t156',
    't157': 'Resisc45_SVHN_w100s50_hh_t157',
    't158': 'CIFAR10_NABirds_w100s50_hh_t158',
    't159': 'Cars_Dogs_w100s50_hh_t159',
    't160': 'CIFAR100_EuroSAT_SmallNORB_w100s50_hh_t160',
    't161': 'CIFAR100_Resisc45_SVHN_w100s50_hh_t161',
    't162': 'CIFAR100_Caltech101_Flowers_w100s50_hh_t162',
    't163': 'CIFAR100_Flowers_Resisc45_w100s50_hh_t163',
    't164': 'Dogs_EuroSAT_Resisc45_w100s50_hh_t164',
    't165': 'CIFAR100_Cars_PACS_w100s50_hh_t165',
    't166': 'Cars_EuroSAT_SUN397_w100s50_hh_t166',
    't167': 'CIFAR10_EuroSAT_PACS_w100s50_hh_t167',
    't168': 'CIFAR10_Food_SVHN_w100s50_hh_t168',
    't169': 'NABirds_Resisc45_SVHN_w100s50_hh_t169',
    't170': 'Caltech101_PACS_SUN397_w100s50_hh_t170',
    't171': 'Flowers_NABirds_Resisc45_w100s50_hh_t171',
    't172': 'Cars_Food_SVHN_w100s50_hh_t172',
    't173': 'CIFAR100_Cars_Resisc45_w100s50_hh_t173',
    't174': 'CIFAR100_Cars_SUN397_w100s50_hh_t174',
    't175': 'Cars_NABirds_SUN397_w100s50_hh_t175',
    't176': 'Caltech101_Food_NABirds_w100s50_hh_t176',
    't177': 'CIFAR10_Flowers_Food_w100s50_hh_t177',
    't178': 'Dogs_Food_SUN397_w100s50_hh_t178',
    't179': 'Flowers_NABirds_SVHN_w100s50_hh_t179',
    't180': 'EuroSAT_Flowers_SmallNORB_w100s50_hh_t180',
    't181': 'CIFAR100_NABirds_w100s50_hh_t181',
    't182': 'CIFAR10_Cars_NABirds_w100s50_hh_t182',
    't183': 'Caltech101_EuroSAT_SmallNORB_w100s50_hh_t183',
    't184': 'Cars_NABirds_Resisc45_w100s50_hh_t184',
    't185': 'Cars_Flowers_w100s50_hh_t185',
    't186': 'Resisc45_SVHN_SmallNORB_w100s50_hh_t186',
    't187': 'CIFAR100_Caltech101_Resisc45_w100s50_hh_t187',
    't188': 'Caltech101_Dogs_NABirds_w100s50_hh_t188',
    't189': 'CIFAR10_Flowers_PACS_w100s50_hh_t189',
    't190': 'CIFAR100_Dogs_SUN397_w100s50_hh_t190',
    't191': 'Cars_Food_NABirds_SUN397_w100s50_hh_t191',
    't192': 'CIFAR100_EuroSAT_Food_SmallNORB_w100s50_hh_t192',
    't193': 'CIFAR10_CIFAR100_Food_SVHN_w100s50_hh_t193',
    't194': 'NABirds_Resisc45_SUN397_SVHN_w100s50_hh_t194',
    't195': 'CIFAR100_Caltech101_Dogs_PACS_w100s50_hh_t195',
    't196': 'CIFAR100_Cars_PACS_SVHN_w100s50_hh_t196',
    't197': 'EuroSAT_NABirds_SUN397_w100s50_hh_t197',
    't198': 'Flowers_NABirds_Resisc45_SUN397_w100s50_hh_t198',
    't199': 'Dogs_Flowers_Food_SUN397_w100s50_hh_t199',
    't200': 'CIFAR100_Cars_Flowers_PACS_w100s50_hh_t200',
    't201': 'CIFAR100_Cars_EuroSAT_SUN397_w100s50_hh_t201',
    't202': 'CIFAR10_Cars_Flowers_NABirds_w100s50_hh_t202',
    't203': 'CIFAR100_Dogs_NABirds_Resisc45_w100s50_hh_t203',
    't204': 'Dogs_EuroSAT_Flowers_Resisc45_w100s50_hh_t204',
    't205': 'CIFAR10_EuroSAT_Food_Resisc45_w100s50_hh_t205',
    't206': 'CIFAR10_Caltech101_Flowers_PACS_w100s50_hh_t206',
    't207': 'CIFAR10_Cars_NABirds_Resisc45_w100s50_hh_t207',
    't208': 'Cars_NABirds_Resisc45_SVHN_w100s50_hh_t208',
    't209': 'CIFAR100_Caltech101_Resisc45_SVHN_w100s50_hh_t209',
    't210': 'CIFAR10_PACS_Resisc45_SmallNORB_w100s50_hh_t210',
    't211': 'CIFAR100_Caltech101_Cars_SUN397_w100s50_hh_t211',
    't212': 'Cars_EuroSAT_PACS_SVHN_w100s50_hh_t212',
    't213': 'CIFAR100_NABirds_Resisc45_SVHN_w100s50_hh_t213',
    't214': 'Caltech101_EuroSAT_Flowers_SmallNORB_w100s50_hh_t214',
    't215': 'Cars_Dogs_EuroSAT_SUN397_w100s50_hh_t215',
    't216': 'CIFAR100_Dogs_NABirds_w100s50_hh_t216',
    't217': 'CIFAR100_Caltech101_Cars_Dogs_w100s50_hh_t217',
    't218': 'CIFAR100_Dogs_Food_SUN397_w100s50_hh_t218',
    't219': 'CIFAR100_Cars_Flowers_Food_w100s50_hh_t219',
    't220': 'Flowers_Food_NABirds_w100s50_hh_t220',
    't221': 'CIFAR10_Dogs_EuroSAT_SUN397_w100s50_hh_t221',
    't222': 'Dogs_Flowers_NABirds_SmallNORB_w100s50_hh_t222'
}
DATASET2DIR = {
    'RegNetY_vit_l16': {
        'Aircraft': 'Aircraft_59',
        'Caltech101': 'Caltech101_62',
        'Cars': 'Cars_37',
        'CIFAR10': 'CIFAR10_4500',
        'CIFAR100': 'CIFAR100_450',
        'DTD': 'DTD_72',
        'Pet': 'Pet_90',
        # 'SUN397': 'SUN397_197'
    },
    'swin_base_7_checkpoint_test4hete_seed1': {
        'Aircraft': 'Aircraft_w100s67_seed1_hh',
        'Caltech101': 'Caltech101_w101s69_seed1_hh',
        'Cars': 'Cars_w196s42_seed1_hh',
        'CIFAR10': 'CIFAR10_w10s5000_seed1_hh',
        'CIFAR100': 'CIFAR100_w100s500_seed1_hh',
        'DTD': 'DTD_w47s80_seed1_hh',
        'Pet': 'Pet_w37s99_seed1_hh',
        'SUN397': 'SUN397_w397s219_seed1_hh',
        'STL10': 'STL10_w10s500_seed1_hh',
        'CUB2011': 'CUB2011_w200s30_seed1_hh',
        'VLCS': 'VLCS_w5s938_seed1_hh',
        'AID': 'AID_w30s267_seed1_hh',
        'dSprites': 'dSprites_w100s500_seed1_hh',
        'UTKFace': 'UTKFace_w10s2411_seed1_hh',
    },
    'swin_base_7_checkpoint_test4hete': {
        'Aircraft': 'Aircraft_w100s60_hh',
        'Caltech101': 'Caltech101_w101s62_hh',
        'Cars': 'Cars_w196s37_hh',
        'CIFAR10': 'CIFAR10_w10s4500_hh',
        'CIFAR100': 'CIFAR100_w100s450_hh',
        'DTD': 'DTD_w47s72_hh',
        'Pet': 'Pet_w37s90_hh',
        'SUN397': 'SUN397_w397s197_hh',
        'STL10': 'STL10_w10s450_hh',
        'CUB2011': 'CUB2011_w200s27_hh',
        'VLCS': 'VLCS_w5s844_hh',
        'AID': 'AID_w30s240_hh'
    },
    'swin_tiny_7_checkpoint_test4hete': {
        'Aircraft': 'Aircraft_w100s60_hh',
        'Caltech101': 'Caltech101_w101s62_hh',
        'Cars': 'Cars_w196s37_hh',
        'CIFAR10': 'CIFAR10_w10s4500_hh',
        'CIFAR100': 'CIFAR100_w100s450_hh',
        'DTD': 'DTD_w47s72_hh',
        'Pet': 'Pet_w37s90_hh',
        'SUN397': 'SUN397_w397s197_hh'
    },
    'swin_base_7_checkpoint': {
        'Aircraft': 'Aircraft_w100s60_hh',
        'Caltech101': 'Caltech101_w101s62_hh',
        'Cars': 'Cars_w196s37_hh',
        'CIFAR10': 'CIFAR10_w10s4500_hh',
        'CIFAR100': 'CIFAR100_w100s450_hh',
        'DTD': 'DTD_w47s72_hh',
        'Pet': 'Pet_w37s90_hh',
        'SUN397': 'SUN397_w397s197_hh',
        'AirC10DTDPet': 'Aircraft_CIFAR10_DTD_Pet_w100s50',
        **CN_DICT
    },
    'swin_tiny_7_checkpoint': {
        **CN_DICT
    },
    'resnet50': {
        'Aircraft': 'Aircraft_resnet50_59',
        'Caltech101': 'Caltech101_resnet50_62',
        'Cars': 'Cars_resnet50_37',
        'CIFAR10': 'CIFAR10_resnet50_4500',
        'CIFAR100': 'CIFAR100_resnet50_450',
        'DTD': 'DTD_resnet50_72',
        'Pet': 'Pet_resnet50_90',
        # 'SUN397': 'SUN397_resnet50_197'
    },
    'RegNetY_vit_l16_10shot': {
        'Aircraft': 'Aircraft_RegNetY_vit_l16_10',
        'Caltech101': 'Caltech101_RegNetY_vit_l16_10',
        'Cars': 'Cars_RegNetY_vit_l16_10',
        'CIFAR10': 'CIFAR10_RegNetY_vit_l16_10',
        'CIFAR100': 'CIFAR100_RegNetY_vit_l16_10',
        'DTD': 'DTD_RegNetY_vit_l16_10',
        'Pet': 'Pet_RegNetY_vit_l16_10',
        # 'SUN397': 'SUN397_RegNetY_vit_l16_10'
    },
    'swin_base_7_checkpoint_10shot': {
        'Aircraft': 'Aircraft_swin_base_7_checkpoint_10',
        'Caltech101': 'Caltech101_swin_base_7_checkpoint_10',
        'Cars': 'Cars_swin_base_7_checkpoint_10',
        'CIFAR10': 'CIFAR10_swin_base_7_checkpoint_10',
        'CIFAR100': 'CIFAR100_swin_base_7_checkpoint_10',
        'DTD': 'DTD_swin_base_7_checkpoint_10',
        'Pet': 'Pet_swin_base_7_checkpoint_10',
        # 'SUN397': 'SUN397_swin_base_7_checkpoint_10'
    },
}

DATASET2NUM_CLASSES = {
    'Aircraft': 100,
    'Caltech101': 101,
    'CIFAR10': 10,
    'CIFAR100': 100,
    'Cars': 196,
    'DTD': 47,
    'Pet': 37,
    'SUN397': 397,
    'AirC10DTDPet': 100,
    'Resisc45': 45,
    'AID': 30,
    'PCAM': 2,
    'SmallNORB': 5,
    'NABirds': 555,
    'DomainNet-clipart': 345,
    'DomainNet-painting': 345,
    'DomainNet-quickdraw': 345,
    'DomainNet-real': 345,
    'DomainNet-sketch': 345,
    'DomainNet': 345,
    'VLCS': 5,
    'PACS': 7,
    'OfficeHome': 65,
    'SVHN': 10,
    'STL10': 10,
    'Food': 101,
    'Flowers': 102,
    'EuroSAT': 10,
    'Dogs': 120,
    'CUB2011': 200,
    'ImageNet': 1000,
    'dSprites': -1,
    'UTKFace': -1
    }

if os.path.isfile('./hh-sampled-classes.pkl'):
    import pickle
    with open('./hh-sampled-classes.pkl', 'rb') as f:
        cur_hh_sampled_classes = pickle.load(f)
    hh_sampled_classes_length = {i: len(cur_hh_sampled_classes[i]) for i in cur_hh_sampled_classes.keys()}
    DATASET2NUM_CLASSES.update(hh_sampled_classes_length)

DATA_SUB_URL2DIM = {
    'RegNetY_vit_l16': 1024,
    'swin_base_7_checkpoint': 3072,
    'resnet50': None,  # Not yet considered
    'RegNetY_vit_l16_10shot': 1024,
    'swin_base_7_checkpoint_10shot': 3072,
    'heterogeneous': 1024
}


DATA_SPECIFIC_RANK = {
    'Aircraft': {
        'Finetuning': torch.tensor([82.7, 88.8, 86.6, 85.6, 85.3, 85.4, 84.5, 84.6, 82.8, 72.8]),
        'FTRank': torch.tensor([1, 9, 8, 7, 5, 6, 3, 4, 2, 0]),
    },
    'Caltech101': {
        'Finetuning': torch.tensor([91.7, 94.3, 91.8, 93.1, 93.2, 91.9, 92.5, 93.4, 89.1, 91.5]),
        'FTRank': torch.tensor([2, 9, 3, 6, 7, 4, 5, 8, 0, 1]),
    },
    'CIFAR10': {
        'Finetuning': torch.tensor([96.2, 97.5, 96.8, 97.7, 97.9, 97.2, 97.4, 97.4, 95.7, 96.8]),
        'FTRank': torch.tensor([1, 7, 2, 8, 9, 4, 5, 6, 0, 3]),
    },
    'CIFAR100': {
        'Finetuning': torch.tensor([83.2, 86.6, 84.5, 87.0, 87.6, 84.8, 85.0, 86.0, 80.8, 83.9]),
        'FTRank': torch.tensor([1, 7, 3, 8, 9, 4, 5, 6, 0, 2]),
    },
    'Cars': {
        'Finetuning': torch.tensor([91.0, 92.3, 91.7, 91.7, 92.0, 91.5, 91.5, 91.0, 91.0, 88.5]),
        'FTRank': torch.tensor([1, 9, 6, 7, 8, 4, 5, 2, 3, 0]),
    },
    'DTD': {
        'Finetuning': torch.tensor([73.6, 77.2, 75.2, 76.2, 75.4, 74.9, 74.8, 74.5, 72.9, 72.8]),
        'FTRank': torch.tensor([2, 9, 6, 8, 7, 5, 4, 3, 1, 0]),
    },
    'Pet': {
        'Finetuning': torch.tensor([91.9, 93.5, 92.5, 94.0, 94.5, 92.9, 93.1, 92.8, 90.5, 89.4]),
        'FTRank': torch.tensor([2, 7, 3, 8, 9, 5, 6, 4, 1, 0]),
    },
    'SUN397': {
        'Finetuning': torch.tensor([62.0, 65.7, 64.7, 64.8, 66.0, 62.3, 63.0, 64.7, 60.5, 60.7]),
        'FTRank': torch.tensor([2, 8, 5, 7, 9, 3, 4, 6, 0, 1]),
    },
    'dSprites': {
        'Finetuning': torch.tensor([-0.045, -0.044, -0.031, -0.028, -0.028, -0.039, -0.035, -0.036, -0.037, -0.035]),
        'FTRank': torch.tensor([0, 1, 7, 8, 9, 2, 5, 4, 3, 6]),
    },
    'UTKFace': {
        'Finetuning': torch.tensor([-391.966, -382.301, -384.610, -383.793, -384.782,
                                    -395.467, -392.400, -392.684, -386.060, -388.771]),
        'FTRank': torch.tensor([3, 9, 7, 8, 6, 0, 2, 1, 5, 4]),
    },
    'c0': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c1': {'FTRank': torch.tensor([0, 9, 5, 4, 7, 1, 3, 6, 2, 8])},
    'c2': {'FTRank': torch.tensor([0, 9, 1, 7, 8, 2, 3, 5, 6, 4])},
    'c3': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c4': {'FTRank': torch.tensor([0, 4, 5, 8, 9, 1, 6, 7, 3, 2])},
    'c5': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 0, 3, 4, 2, 5])},
    'c6': {'FTRank': torch.tensor([0, 5, 6, 8, 9, 1, 2, 3, 4, 7])},
    'c7': {'FTRank': torch.tensor([0, 6, 7, 9, 8, 1, 3, 4, 2, 5])},
    'c8': {'FTRank': torch.tensor([0, 4, 6, 8, 9, 1, 2, 5, 3, 7])},
    'c9': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c10': {'FTRank': torch.tensor([0, 6, 3, 1, 7, 2, 3, 7, 9, 5])},
    'c11': {'FTRank': torch.tensor([0, 7, 4, 9, 8, 1, 3, 5, 2, 6])},
    'c12': {'FTRank': torch.tensor([0, 4, 1, 8, 9, 5, 6, 7, 3, 2])},
    'c13': {'FTRank': torch.tensor([0, 4, 5, 6, 9, 1, 3, 7, 2, 8])},
    'c14': {'FTRank': torch.tensor([0, 7, 3, 8, 9, 4, 5, 6, 1, 2])},
    'c15': {'FTRank': torch.tensor([0, 5, 6, 8, 9, 1, 2, 3, 4, 7])},
    'c16': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c17': {'FTRank': torch.tensor([0, 9, 2, 8, 3, 1, 3, 6, 6, 5])},
    'c18': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c19': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c20': {'FTRank': torch.tensor([1, 6, 7, 8, 9, 0, 2, 4, 3, 5])},
    'c21': {'FTRank': torch.tensor([0, 4, 6, 8, 9, 3, 7, 5, 1, 2])},
    'c22': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c23': {'FTRank': torch.tensor([0, 5, 4, 6, 7, 1, 3, 9, 2, 7])},
    'c24': {'FTRank': torch.tensor([0, 5, 6, 8, 9, 3, 4, 7, 2, 1])},
    'c25': {'FTRank': torch.tensor([0, 7, 6, 8, 9, 1, 3, 5, 2, 4])},
    'c26': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c27': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c28': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c29': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c30': {'FTRank': torch.tensor([1, 6, 7, 8, 9, 0, 3, 5, 2, 4])},
    'c31': {'FTRank': torch.tensor([0, 5, 2, 7, 9, 4, 6, 8, 3, 1])},
    'c32': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 2, 4, 5, 0, 3])},
    'c33': {'FTRank': torch.tensor([0, 6, 7, 8, 9, 1, 4, 5, 2, 3])},
    'c34': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 3, 4, 2, 5])},
    'c35': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c36': {'FTRank': torch.tensor([1, 7, 5, 8, 9, 0, 4, 6, 2, 3])},
    'c37': {'FTRank': torch.tensor([0, 9, 1, 2, 3, 5, 6, 8, 4, 7])},
    'c38': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c39': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c40': {'FTRank': torch.tensor([0, 9, 5, 8, 6, 1, 4, 3, 2, 7])},
    'c41': {'FTRank': torch.tensor([0, 6, 7, 8, 9, 1, 4, 5, 2, 3])},
    'c42': {'FTRank': torch.tensor([0, 5, 6, 9, 7, 1, 3, 4, 2, 8])},
    'c43': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 2, 4, 5, 0, 3])},
    'c44': {'FTRank': torch.tensor([1, 7, 6, 8, 9, 0, 4, 5, 2, 3])},
    'c45': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c46': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c47': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c48': {'FTRank': torch.tensor([0, 4, 6, 9, 8, 1, 2, 5, 3, 7])},
    'c49': {'FTRank': torch.tensor([0, 4, 6, 8, 9, 1, 2, 5, 3, 7])},
    'c50': {'FTRank': torch.tensor([2, 9, 6, 7, 8, 0, 3, 4, 1, 5])},
    'c51': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c52': {'FTRank': torch.tensor([2, 9, 6, 7, 8, 0, 3, 5, 1, 4])},
    'c53': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 2, 4, 5, 0, 1])},
    'c54': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 4, 5, 2, 3])},
    'c55': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 4, 5, 2, 3])},
    'c56': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c57': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 2, 4, 5, 0, 3])},
    'c58': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 0, 4, 5, 2, 3])},
    'c59': {'FTRank': torch.tensor([2, 9, 4, 8, 7, 3, 5, 6, 0, 1])},
    'c60': {'FTRank': torch.tensor([0, 8, 5, 6, 9, 1, 3, 7, 2, 4])},
    'c61': {'FTRank': torch.tensor([0, 8, 6, 7, 9, 1, 3, 5, 2, 4])},
    'c62': {'FTRank': torch.tensor([0, 7, 5, 9, 8, 1, 3, 4, 2, 6])},
    'c63': {'FTRank': torch.tensor([2, 8, 6, 7, 9, 0, 3, 4, 1, 5])},
    'c64': {'FTRank': torch.tensor([2, 8, 6, 7, 9, 0, 3, 4, 1, 5])},
    'c65': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 3, 5, 2, 4])},
    'c66': {'FTRank': torch.tensor([0, 6, 7, 8, 9, 1, 4, 5, 2, 3])},
    'c67': {'FTRank': torch.tensor([0, 8, 5, 7, 9, 1, 3, 6, 2, 4])},
    'c68': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 4, 5, 2, 3])},
    'c69': {'FTRank': torch.tensor([0, 6, 7, 8, 9, 1, 3, 5, 2, 4])},
    'c70': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c71': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c72': {'FTRank': torch.tensor([1, 7, 5, 8, 9, 0, 3, 4, 2, 6])},
    'c73': {'FTRank': torch.tensor([0, 9, 3, 1, 8, 4, 6, 7, 2, 5])},
    'c74': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c75': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 4, 5, 2, 3])},
    'c76': {'FTRank': torch.tensor([1, 6, 7, 8, 9, 0, 3, 5, 2, 4])},
    'c77': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c78': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c79': {'FTRank': torch.tensor([1, 7, 6, 8, 9, 0, 3, 5, 2, 4])},
    'c80': {'FTRank': torch.tensor([2, 9, 6, 7, 8, 0, 3, 4, 1, 5])},
    'c81': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c82': {'FTRank': torch.tensor([2, 8, 6, 7, 9, 0, 3, 5, 1, 4])},
    'c83': {'FTRank': torch.tensor([1, 9, 5, 8, 7, 0, 3, 6, 2, 4])},
    'c84': {'FTRank': torch.tensor([1, 5, 6, 9, 8, 0, 2, 4, 3, 7])},
    'c85': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c86': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 2, 4, 5, 0, 3])},
    'c87': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 0, 4, 5, 2, 3])},
    'c88': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c89': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 2, 4, 5, 0, 1])},
    'c90': {'FTRank': torch.tensor([1, 7, 5, 8, 9, 0, 3, 4, 2, 6])},
    'c91': {'FTRank': torch.tensor([1, 8, 6, 7, 9, 0, 4, 5, 2, 3])},
    'c92': {'FTRank': torch.tensor([3, 9, 6, 7, 8, 1, 4, 5, 0, 2])},
    'c93': {'FTRank': torch.tensor([0, 9, 6, 7, 8, 1, 4, 5, 2, 3])},
    'c94': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
    'c95': {'FTRank': torch.tensor([1, 9, 6, 7, 8, 0, 4, 5, 2, 3])},
}

BKB_SPECIFIC_RANK = ['googlenet', 'inception_v3', 'resnet50', 'resnet101', 'resnet152', 'densenet121', 'densenet169', 'densenet201', 'mobilenet_v2', 'mnasnet1_0']
BKB_SPECIFIC_RANK2ID = {i: j for i, j in zip(BKB_SPECIFIC_RANK, range(len(BKB_SPECIFIC_RANK)))}

BKB_FTD_SPECIFIC_RANK = ['FTD_densenet201_AID', 'FTD_densenet201_Aircraft', 'FTD_densenet201_CIFAR10', 'FTD_densenet201_CIFAR100', 'FTD_densenet201_CUB2011', 'FTD_densenet201_Caltech101', 'FTD_densenet201_Cars', 'FTD_densenet201_DTD', 'FTD_densenet201_Dogs', 'FTD_densenet201_EuroSAT', 'FTD_densenet201_Flowers', 'FTD_densenet201_Food', 'FTD_densenet201_ImageNet', 'FTD_densenet201_NABirds', 'FTD_densenet201_PACS', 'FTD_densenet201_Pet', 'FTD_densenet201_Resisc45', 'FTD_densenet201_STL10', 'FTD_densenet201_SUN397', 'FTD_densenet201_SVHN', 'FTD_densenet201_SmallNORB', 'FTD_densenet201_VLCS', 'FTD_inception_v3_AID', 'FTD_inception_v3_Aircraft', 'FTD_inception_v3_CIFAR10', 'FTD_inception_v3_CIFAR100', 'FTD_inception_v3_CUB2011', 'FTD_inception_v3_Caltech101', 'FTD_inception_v3_Cars', 'FTD_inception_v3_DTD', 'FTD_inception_v3_Dogs', 'FTD_inception_v3_EuroSAT', 'FTD_inception_v3_Flowers', 'FTD_inception_v3_Food', 'FTD_inception_v3_ImageNet', 'FTD_inception_v3_NABirds', 'FTD_inception_v3_PACS', 'FTD_inception_v3_Pet', 'FTD_inception_v3_Resisc45', 'FTD_inception_v3_STL10', 'FTD_inception_v3_SUN397', 'FTD_inception_v3_SVHN', 'FTD_inception_v3_SmallNORB', 'FTD_inception_v3_VLCS', 'FTD_resnet50_AID', 'FTD_resnet50_Aircraft', 'FTD_resnet50_CIFAR10', 'FTD_resnet50_CIFAR100', 'FTD_resnet50_CUB2011', 'FTD_resnet50_Caltech101', 'FTD_resnet50_Cars', 'FTD_resnet50_DTD', 'FTD_resnet50_Dogs', 'FTD_resnet50_EuroSAT', 'FTD_resnet50_Flowers', 'FTD_resnet50_Food', 'FTD_resnet50_ImageNet', 'FTD_resnet50_NABirds', 'FTD_resnet50_PACS', 'FTD_resnet50_Pet', 'FTD_resnet50_Resisc45', 'FTD_resnet50_STL10', 'FTD_resnet50_SUN397', 'FTD_resnet50_SVHN', 'FTD_resnet50_SmallNORB', 'FTD_resnet50_VLCS']
SELECTED_DATASETS = ['Aircraft', 'DTD', 'SVHN', 'Pet', 'VLCS', 'STL10', 'CUB2011', 'ImageNet']
SELECTED_INDICES = [i for i, j in enumerate(BKB_FTD_SPECIFIC_RANK) if not any([(k in j) for k in SELECTED_DATASETS])]

BKB_FTD_SPECIFIC_RANK = [BKB_FTD_SPECIFIC_RANK[i] for i in SELECTED_INDICES]


DATA_FTD_SPECIFIC_RANK = {
    'STL10': {
        'Finetuning': torch.tensor([92.38, 90.86, 97.56, 96.6, 96.58, 98.16, 92.64, 97.67, 97.84, 96.56, 93.14, 93.97, 98.1, 94.67, 96.8, 97.99, 94.85, 98.19, 92.71, 84.4, 96.41, 98.08, 96.49, 90.34, 96.01, 96.45, 97.04, 97.44, 91.0, 97.49, 97.75, 95.69, 97.01, 91.12, 97.99, 92.88, 97.16, 97.97, 89.45, 97.85, 93.7, 81.71, 88.6, 97.84, 95.66, 89.55, 95.74, 96.41, 96.9, 97.79, 91.79, 97.54, 97.72, 96.05, 95.44, 93.55, 98.14, 94.12, 97.22, 97.86, 92.79, 98.09, 96.94, 84.84, 97.01, 97.94]), 'FTRank': torch.tensor([11, 7, 47, 35, 34, 64, 12, 48, 53, 33, 16, 19, 62, 21, 36, 58, 22, 65, 13, 1, 29, 60, 32, 6, 27, 31, 41, 44, 8, 45, 50, 25, 39, 9, 59, 15, 42, 57, 4, 54, 18, 0, 3, 52, 24, 5, 26, 30, 37, 51, 10, 46, 49, 28, 23, 17, 63, 20, 43, 55, 14, 61, 38, 2, 40, 56])
    },
    'CUB2011': {
        'Finetuning': torch.tensor([72.87, 71.13, 80.74, 79.57, 82.76, 81.6, 74.63, 80.08, 81.1, 78.27, 75.15, 76.04, 82.38, 85.88, 80.6, 81.41, 77.37, 81.53, 73.63, 59.68, 79.55, 81.98, 77.51, 69.02, 75.47, 77.79, 79.79, 78.6, 70.99, 78.68, 79.86, 77.13, 77.58, 70.97, 79.57, 85.09, 78.46, 79.89, 67.14, 79.44, 72.59, 55.61, 66.33, 79.34, 77.51, 68.74, 76.96, 77.53, 81.27, 80.39, 72.82, 79.67, 80.0, 78.29, 77.65, 74.47, 80.96, 85.86, 80.82, 80.36, 73.85, 80.65, 79.2, 60.91, 79.62, 80.91]), 'FTRank': torch.tensor([12, 9, 51, 39, 62, 59, 16, 46, 55, 29, 17, 19, 61, 65, 49, 57, 22, 58, 13, 1, 37, 60, 24, 6, 18, 28, 42, 32, 8, 33, 43, 21, 26, 7, 38, 63, 31, 44, 4, 36, 10, 0, 3, 35, 23, 5, 20, 25, 56, 48, 11, 41, 45, 30, 27, 15, 54, 64, 52, 47, 14, 50, 34, 2, 40, 53])
    },
    'VLCS': {
        'Finetuning': torch.tensor([79.12, 78.69, 83.16, 82.08, 81.8, 84.16, 79.53, 83.47, 84.19, 82.29, 79.81, 80.34, 84.68, 80.55, 82.54, 84.31, 80.65, 84.09, 82.79, 73.5, 82.04, 84.68, 82.2, 78.78, 80.77, 82.04, 82.63, 83.19, 79.81, 83.32, 83.85, 81.67, 82.14, 79.12, 83.94, 79.75, 82.51, 84.13, 77.48, 83.38, 83.38, 73.59, 77.57, 84.09, 81.33, 77.32, 81.08, 82.08, 81.95, 83.1, 79.06, 82.63, 83.07, 80.96, 80.96, 79.5, 84.03, 80.18, 82.45, 83.38, 79.34, 83.6, 84.03, 74.06, 82.17, 83.97]), 'FTRank': torch.tensor([10, 6, 45, 32, 27, 61, 13, 51, 62, 36, 15, 18, 65, 19, 39, 63, 20, 59, 42, 0, 30, 64, 35, 7, 21, 29, 41, 46, 16, 47, 53, 26, 33, 9, 54, 14, 38, 60, 4, 48, 49, 1, 5, 58, 25, 3, 24, 31, 28, 44, 8, 40, 43, 23, 22, 12, 56, 17, 37, 50, 11, 52, 57, 2, 34, 55])
    },
    'AID': {
        'Finetuning': torch.tensor([97.55, 95.7, 97.2, 96.85, 96.7, 97.4, 96.3, 97.35, 97.15, 96.65, 96.4, 96.7, 97.4, 96.6, 97.15, 97.35, 97.4, 97.35, 96.65, 92.75, 97.2, 97.5, 96.8, 95.2, 95.65, 96.0, 96.35, 96.15, 95.1, 96.45, 96.6, 96.1, 96.05, 95.5, 96.55, 95.2, 96.3, 96.65, 95.25, 96.4, 95.8, 91.35, 94.2, 96.5, 97.0, 95.25, 95.85, 96.55, 96.55, 96.8, 95.75, 96.85, 96.75, 96.25, 96.45, 96.8, 96.95, 96.45, 96.75, 96.65, 97.2, 96.55, 96.8, 93.05, 96.5, 96.8]), 
        'FTRank': torch.tensor([65, 11, 55, 50, 40, 62, 20, 60, 53, 38, 23, 41, 63, 34, 54, 58, 61, 59, 36, 1, 57, 64, 48, 6, 10, 15, 22, 18, 4, 25, 35, 17, 16, 9, 33, 5, 21, 39, 8, 24, 13, 0, 3, 29, 52, 7, 14, 30, 31, 47, 12, 49, 43, 19, 26, 46, 51, 27, 42, 37, 56, 32, 45, 2, 28, 44])
    },
    'Pet': {
        'Finetuning': torch.tensor([84.33, 83.57, 93.46, 92.23, 92.18, 94.0, 85.99, 93.73, 93.79, 92.75, 86.26, 87.98, 94.09, 89.67, 92.5, 94.11, 90.52, 94.09, 84.44, 76.37, 91.96, 94.0, 91.71, 80.13, 90.0, 91.44, 91.82, 92.07, 80.81, 92.78, 93.92, 90.3, 90.92, 80.81, 93.4, 85.55, 92.04, 93.32, 77.95, 93.24, 83.65, 68.57, 77.95, 93.16, 90.98, 80.87, 91.31, 92.4, 92.37, 93.73, 84.08, 93.13, 94.06, 92.26, 90.16, 87.46, 94.17, 88.91, 92.94, 94.22, 85.28, 93.89, 92.91, 77.38, 93.54, 94.28]), 
        'FTRank': torch.tensor([12, 9, 50, 36, 35, 57, 16, 53, 54, 41, 17, 19, 61, 21, 40, 62, 25, 60, 13, 1, 32, 58, 30, 5, 22, 29, 31, 34, 7, 42, 56, 24, 26, 6, 49, 15, 33, 48, 4, 47, 10, 0, 3, 46, 27, 8, 28, 39, 38, 52, 11, 45, 59, 37, 23, 18, 63, 20, 44, 64, 14, 55, 43, 2, 51, 65])
    },
    'DTD': {
        'Finetuning': torch.tensor([68.78, 64.68, 74.41, 73.03, 72.61, 75.64, 68.19, 77.55, 75.16, 73.14, 70.11, 71.28, 76.86, 70.43, 73.72, 76.28, 71.81, 75.74, 69.73, 57.07, 73.88, 75.85, 73.09, 65.37, 69.89, 72.71, 73.83, 73.83, 66.17, 76.17, 75.8, 72.55, 73.14, 66.54, 75.69, 67.39, 74.41, 76.01, 63.88, 75.85, 69.1, 55.64, 63.67, 75.48, 71.28, 63.72, 70.74, 71.7, 72.29, 74.15, 67.13, 76.12, 74.41, 71.38, 72.13, 69.47, 75.9, 69.36, 73.88, 75.11, 69.26, 75.0, 73.46, 57.66, 73.83, 75.32]), 
        'FTRank': torch.tensor([13, 6, 45, 33, 31, 53, 12, 65, 50, 36, 20, 23, 64, 21, 38, 63, 27, 55, 18, 1, 42, 57, 34, 7, 19, 32, 39, 41, 8, 62, 56, 30, 35, 9, 54, 11, 46, 60, 5, 58, 14, 0, 3, 52, 24, 4, 22, 26, 29, 44, 10, 61, 47, 25, 28, 17, 59, 16, 43, 49, 15, 48, 37, 2, 40, 51])
    },
    'Aircraft': {
        'Finetuning': torch.tensor([83.8, 88.33, 84.85, 84.4, 84.43, 85.39, 85.21, 84.73, 85.39, 83.98, 84.04, 85.03, 85.66, 84.4, 85.15, 85.12, 85.42, 85.45, 84.37, 76.72, 86.41, 85.54, 79.51, 81.97, 79.39, 79.03, 79.93, 80.65, 79.9, 79.48, 81.13, 80.44, 79.87, 80.23, 80.86, 78.19, 79.93, 79.99, 76.12, 80.65, 79.03, 67.93, 75.97, 80.47, 85.9, 88.39, 85.3, 85.99, 85.78, 85.99, 85.54, 86.41, 85.87, 85.21, 85.9, 86.68, 86.23, 85.27, 86.08, 86.56, 85.84, 86.11, 86.08, 76.9, 86.23, 86.86]), 
        'FTRank': torch.tensor([24, 64, 32, 28, 30, 40, 37, 31, 41, 25, 26, 33, 46, 29, 35, 34, 42, 43, 27, 3, 60, 44, 10, 23, 8, 7, 13, 19, 12, 9, 22, 17, 11, 16, 21, 5, 14, 15, 2, 20, 6, 0, 1, 18, 50, 65, 39, 53, 47, 52, 45, 59, 49, 36, 51, 62, 58, 38, 54, 61, 48, 56, 55, 4, 57, 63])
    },
    't127': {'FTRank': torch.tensor([5, 22, 18, 33, 7, 29, 4, 8, 12, 37, 19, 11, 31, 1, 25, 2, 6, 32, 14, 36, 3, 28, 15, 41, 27, 9, 40, 0, 21, 23, 24, 35, 16, 34, 10, 26, 20, 39, 30, 13, 38, 17])},
    't128': {'FTRank': torch.tensor([6, 22, 16, 32, 5, 28, 7, 33, 37, 15, 18, 12, 8, 2, 21, 1, 4, 34, 11, 30, 3, 39, 40, 26, 25, 9, 20, 0, 24, 19, 23, 36, 13, 35, 10, 41, 38, 27, 29, 17, 31, 14])},
    't129': {'FTRank': torch.tensor([2, 29, 39, 34, 6, 28, 5, 31, 14, 11, 19, 8, 7, 1, 21, 9, 38, 35, 15, 25, 3, 37, 18, 23, 27, 4, 17, 0, 20, 26, 40, 36, 16, 33, 10, 41, 22, 24, 32, 12, 30, 13])},
    't130': {'FTRank': torch.tensor([3, 27, 22, 33, 4, 39, 6, 11, 34, 18, 23, 13, 9, 1, 28, 5, 8, 35, 14, 41, 2, 29, 38, 21, 30, 7, 19, 0, 17, 20, 25, 36, 12, 40, 10, 24, 37, 26, 32, 15, 31, 16])},
    't131': {'FTRank': torch.tensor([3, 23, 18, 31, 37, 34, 2, 8, 11, 14, 17, 12, 5, 1, 28, 6, 10, 35, 41, 38, 4, 29, 16, 22, 32, 9, 21, 0, 20, 24, 25, 36, 40, 39, 7, 27, 19, 26, 33, 13, 30, 15])},
    't132': {'FTRank': torch.tensor([2, 30, 37, 38, 5, 31, 3, 7, 9, 14, 24, 8, 12, 1, 23, 17, 36, 40, 18, 34, 4, 26, 11, 20, 29, 6, 27, 0, 19, 28, 39, 41, 15, 35, 10, 25, 21, 22, 33, 13, 32, 16])},
    't133': {'FTRank': torch.tensor([2, 29, 36, 34, 3, 30, 4, 9, 39, 12, 18, 8, 10, 1, 15, 22, 38, 31, 11, 26, 5, 25, 41, 16, 21, 6, 23, 0, 19, 28, 37, 35, 14, 33, 7, 24, 40, 20, 27, 13, 32, 17])},
    't134': {'FTRank': torch.tensor([5, 25, 19, 36, 7, 32, 6, 39, 16, 18, 22, 12, 8, 2, 20, 1, 4, 35, 11, 23, 3, 40, 24, 31, 27, 9, 15, 0, 26, 21, 29, 38, 14, 37, 10, 41, 30, 33, 34, 17, 28, 13])},
    't135': {'FTRank': torch.tensor([9, 22, 14, 32, 3, 31, 4, 10, 7, 40, 18, 16, 8, 1, 28, 2, 5, 35, 12, 38, 6, 30, 17, 41, 29, 20, 21, 0, 25, 24, 26, 36, 13, 37, 11, 27, 19, 39, 33, 23, 34, 15])},
    't136': {'FTRank': torch.tensor([3, 29, 23, 36, 2, 39, 14, 6, 8, 21, 28, 10, 5, 1, 31, 7, 4, 38, 9, 41, 19, 32, 11, 26, 35, 12, 20, 0, 18, 24, 25, 37, 13, 40, 22, 27, 17, 30, 34, 16, 33, 15])},
    't137': {'FTRank': torch.tensor([4, 26, 22, 37, 7, 32, 5, 33, 12, 17, 21, 11, 10, 1, 19, 2, 6, 40, 13, 34, 3, 39, 18, 27, 30, 8, 25, 0, 20, 23, 29, 38, 14, 36, 9, 41, 24, 28, 35, 15, 31, 16])},
    't138': {'FTRank': torch.tensor([15, 17, 11, 32, 39, 25, 2, 4, 7, 9, 12, 26, 8, 1, 31, 3, 5, 33, 41, 28, 6, 27, 13, 16, 23, 34, 21, 0, 35, 19, 20, 38, 40, 37, 10, 24, 18, 22, 30, 36, 29, 14])},
    't139': {'FTRank': torch.tensor([3, 29, 22, 36, 4, 32, 2, 7, 39, 11, 15, 10, 9, 1, 18, 30, 19, 34, 13, 35, 5, 26, 41, 17, 24, 6, 23, 0, 20, 31, 27, 38, 12, 37, 8, 25, 40, 21, 28, 16, 33, 14])},
    't140': {'FTRank': torch.tensor([5, 29, 22, 33, 8, 35, 6, 9, 15, 18, 26, 11, 40, 1, 24, 2, 4, 34, 13, 36, 3, 30, 12, 19, 31, 7, 41, 0, 21, 23, 27, 37, 17, 38, 10, 28, 20, 25, 32, 14, 39, 16])},
    't141': {'FTRank': torch.tensor([2, 20, 16, 31, 24, 30, 3, 12, 10, 39, 17, 11, 6, 1, 25, 5, 8, 34, 35, 38, 4, 29, 14, 41, 27, 9, 21, 0, 19, 23, 22, 36, 33, 37, 7, 26, 18, 40, 32, 13, 28, 15])},
    't142': {'FTRank': torch.tensor([2, 25, 13, 33, 39, 31, 8, 6, 3, 12, 16, 11, 5, 1, 22, 7, 4, 36, 41, 35, 20, 32, 10, 21, 26, 9, 24, 0, 19, 28, 23, 38, 40, 37, 14, 29, 17, 27, 34, 18, 30, 15])},
    't143': {'FTRank': torch.tensor([5, 26, 20, 36, 7, 33, 6, 9, 13, 15, 21, 11, 40, 1, 22, 2, 4, 34, 16, 35, 3, 31, 12, 18, 30, 8, 41, 0, 27, 23, 28, 38, 19, 37, 10, 29, 24, 25, 32, 14, 39, 17])},
    't144': {'FTRank': torch.tensor([8, 26, 20, 39, 4, 33, 5, 6, 9, 14, 21, 28, 13, 1, 25, 2, 7, 41, 11, 34, 3, 29, 12, 16, 32, 31, 27, 0, 30, 22, 23, 40, 15, 38, 10, 24, 17, 19, 36, 37, 35, 18])},
    't145': {'FTRank': torch.tensor([2, 37, 39, 38, 3, 29, 7, 8, 10, 11, 17, 5, 15, 1, 16, 32, 41, 31, 13, 28, 6, 26, 9, 18, 24, 4, 27, 0, 21, 35, 40, 36, 19, 33, 14, 25, 22, 20, 30, 12, 34, 23])},
    't146': {'FTRank': torch.tensor([6, 26, 19, 36, 9, 35, 5, 8, 12, 15, 23, 11, 40, 1, 24, 2, 4, 33, 18, 34, 3, 31, 13, 17, 29, 7, 41, 0, 28, 22, 27, 38, 20, 37, 10, 30, 21, 25, 32, 14, 39, 16])},
    't147': {'FTRank': torch.tensor([2, 35, 39, 37, 3, 29, 6, 8, 9, 12, 26, 5, 14, 1, 15, 30, 41, 31, 16, 25, 7, 24, 11, 18, 28, 4, 27, 0, 19, 33, 40, 38, 17, 34, 13, 23, 22, 20, 36, 10, 32, 21])},
    't148': {'FTRank': torch.tensor([5, 23, 16, 36, 6, 32, 7, 39, 14, 18, 26, 13, 8, 2, 19, 1, 4, 35, 11, 24, 3, 40, 22, 29, 30, 9, 20, 0, 25, 21, 27, 38, 15, 37, 10, 41, 28, 33, 34, 17, 31, 12])},
    't149': {'FTRank': torch.tensor([0, 24, 20, 32, 39, 29, 2, 4, 9, 12, 14, 11, 7, 1, 26, 10, 8, 35, 41, 37, 3, 33, 13, 21, 31, 5, 23, 15, 19, 27, 30, 38, 40, 36, 6, 25, 17, 22, 34, 16, 28, 18])},
    't150': {'FTRank': torch.tensor([2, 27, 34, 32, 39, 26, 3, 5, 6, 10, 13, 7, 12, 1, 15, 21, 36, 33, 41, 29, 4, 25, 9, 16, 23, 8, 22, 0, 19, 31, 38, 37, 40, 35, 11, 24, 18, 20, 28, 14, 30, 17])},
    't151': {'FTRank': torch.tensor([25, 29, 17, 28, 2, 20, 4, 5, 6, 11, 15, 39, 7, 1, 37, 26, 8, 27, 12, 10, 3, 19, 9, 16, 13, 41, 24, 0, 38, 35, 32, 36, 21, 33, 14, 31, 22, 23, 30, 40, 34, 18])},
    't152': {'FTRank': torch.tensor([27, 15, 8, 26, 0, 21, 2, 9, 6, 7, 13, 39, 5, 22, 37, 1, 4, 25, 10, 11, 3, 24, 16, 20, 12, 41, 28, 14, 38, 18, 23, 35, 19, 34, 17, 33, 30, 29, 31, 40, 36, 32])},
    't153': {'FTRank': torch.tensor([0, 22, 17, 35, 1, 32, 2, 5, 39, 8, 16, 12, 7, 21, 20, 4, 13, 33, 10, 36, 3, 30, 41, 14, 25, 11, 24, 26, 23, 18, 27, 38, 9, 37, 6, 28, 40, 19, 31, 15, 34, 29])},
    't154': {'FTRank': torch.tensor([7, 11, 13, 36, 2, 33, 25, 6, 39, 9, 10, 18, 4, 1, 17, 3, 5, 34, 8, 32, 28, 22, 41, 19, 14, 21, 20, 0, 26, 15, 24, 38, 12, 37, 31, 30, 40, 23, 29, 27, 35, 16])},
    't155': {'FTRank': torch.tensor([3, 36, 39, 37, 1, 28, 23, 5, 4, 9, 14, 12, 7, 2, 10, 31, 41, 30, 8, 15, 26, 21, 6, 16, 13, 11, 25, 0, 24, 35, 40, 38, 17, 34, 29, 27, 19, 22, 32, 18, 33, 20])},
    't156': {'FTRank': torch.tensor([13, 40, 32, 36, 19, 27, 33, 22, 17, 31, 38, 16, 23, 8, 9, 25, 12, 7, 3, 2, 4, 24, 6, 21, 29, 0, 10, 1, 18, 41, 34, 28, 5, 30, 37, 11, 20, 26, 39, 14, 35, 15])},
    't157': {'FTRank': torch.tensor([29, 13, 6, 27, 3, 19, 7, 9, 12, 11, 17, 39, 8, 1, 37, 2, 4, 22, 14, 10, 5, 25, 15, 21, 16, 41, 28, 0, 38, 20, 24, 36, 23, 34, 18, 33, 31, 30, 32, 40, 35, 26])},
    't158': {'FTRank': torch.tensor([3, 24, 18, 31, 5, 34, 2, 12, 9, 40, 21, 10, 6, 1, 26, 11, 13, 35, 19, 38, 4, 32, 17, 41, 29, 8, 23, 0, 22, 25, 27, 36, 14, 37, 7, 28, 20, 39, 33, 15, 30, 16])},
    't159': {'FTRank': torch.tensor([3, 23, 17, 31, 34, 35, 2, 7, 10, 14, 18, 12, 5, 1, 28, 9, 11, 37, 41, 38, 4, 29, 16, 22, 33, 8, 21, 0, 20, 24, 26, 36, 40, 39, 6, 25, 19, 27, 32, 13, 30, 15])},
    't160': {'FTRank': torch.tensor([1, 36, 39, 37, 0, 29, 20, 4, 2, 3, 14, 11, 5, 12, 9, 30, 41, 31, 8, 15, 22, 24, 7, 13, 17, 10, 25, 6, 23, 34, 40, 38, 15, 35, 27, 26, 21, 19, 32, 18, 33, 28])},
    't161': {'FTRank': torch.tensor([22, 30, 39, 35, 2, 27, 5, 4, 9, 10, 18, 32, 8, 1, 25, 16, 40, 26, 7, 12, 3, 20, 6, 13, 15, 37, 23, 0, 31, 28, 41, 36, 14, 33, 11, 24, 21, 19, 29, 38, 34, 17])},
    't162': {'FTRank': torch.tensor([3, 26, 34, 37, 5, 30, 4, 28, 11, 15, 18, 10, 9, 1, 20, 7, 29, 39, 13, 31, 2, 38, 17, 21, 27, 6, 23, 0, 19, 25, 36, 41, 16, 35, 8, 40, 22, 24, 33, 12, 32, 14])},
    't163': {'FTRank': torch.tensor([6, 28, 39, 34, 2, 29, 3, 30, 11, 10, 19, 18, 7, 0, 20, 4, 36, 33, 9, 17, 1, 37, 13, 22, 21, 15, 16, 5, 26, 24, 40, 38, 14, 35, 8, 41, 23, 25, 32, 27, 31, 12])},
    't164': {'FTRank': torch.tensor([14, 23, 16, 36, 2, 39, 8, 6, 10, 17, 24, 27, 5, 1, 30, 3, 4, 37, 9, 40, 7, 29, 12, 22, 31, 33, 20, 0, 28, 19, 21, 38, 11, 41, 15, 25, 18, 26, 35, 34, 32, 13])},
    't165': {'FTRank': torch.tensor([2, 26, 31, 32, 39, 25, 3, 5, 6, 11, 15, 10, 9, 1, 17, 20, 35, 34, 41, 30, 4, 24, 12, 18, 27, 7, 21, 0, 16, 28, 37, 38, 40, 36, 8, 23, 19, 22, 33, 14, 29, 13])},
    't166': {'FTRank': torch.tensor([4, 20, 15, 34, 29, 30, 3, 6, 9, 11, 16, 10, 36, 1, 22, 2, 5, 33, 40, 32, 7, 28, 11, 17, 27, 8, 41, 0, 21, 24, 25, 37, 38, 35, 13, 26, 19, 22, 31, 14, 39, 18])},
    't167': {'FTRank': torch.tensor([7, 34, 24, 29, 8, 21, 39, 14, 9, 23, 33, 17, 16, 5, 3, 22, 18, 15, 6, 12, 27, 11, 1, 30, 28, 0, 13, 4, 20, 40, 35, 31, 19, 26, 38, 25, 10, 32, 41, 2, 37, 36])},
    't168': {'FTRank': torch.tensor([1, 29, 23, 36, 3, 32, 2, 5, 39, 9, 15, 10, 8, 0, 18, 30, 20, 34, 13, 35, 4, 26, 41, 17, 24, 6, 22, 12, 19, 31, 27, 38, 11, 37, 7, 25, 40, 21, 28, 16, 33, 14])},
    't169': {'FTRank': torch.tensor([10, 20, 12, 33, 5, 32, 2, 8, 9, 39, 17, 18, 7, 1, 26, 4, 6, 35, 15, 38, 3, 30, 14, 41, 29, 25, 21, 0, 24, 22, 23, 37, 16, 36, 11, 27, 19, 40, 34, 28, 31, 13])},
    't170': {'FTRank': torch.tensor([4, 27, 22, 36, 6, 32, 3, 9, 11, 14, 21, 12, 39, 1, 26, 2, 8, 37, 16, 34, 5, 30, 13, 19, 31, 7, 41, 0, 24, 25, 28, 38, 17, 35, 10, 29, 20, 23, 33, 15, 40, 18])},
    't171': {'FTRank': torch.tensor([9, 18, 14, 34, 3, 31, 5, 12, 8, 40, 15, 20, 7, 1, 26, 2, 6, 35, 11, 38, 4, 33, 16, 41, 27, 25, 21, 0, 23, 22, 24, 37, 13, 36, 10, 29, 19, 39, 32, 28, 30, 17])},
    't172': {'FTRank': torch.tensor([3, 21, 15, 32, 37, 28, 2, 10, 30, 12, 16, 9, 8, 0, 24, 7, 11, 33, 41, 35, 4, 29, 39, 17, 27, 6, 22, 1, 20, 18, 23, 36, 40, 34, 5, 25, 38, 19, 31, 13, 26, 14])},
    't173': {'FTRank': torch.tensor([6, 27, 34, 33, 37, 25, 3, 2, 4, 9, 11, 20, 7, 1, 19, 12, 36, 31, 41, 26, 5, 24, 8, 14, 17, 21, 18, 0, 23, 28, 39, 38, 40, 35, 10, 22, 15, 16, 30, 29, 32, 13])},
    't174': {'FTRank': torch.tensor([2, 22, 24, 32, 27, 31, 3, 4, 7, 10, 15, 9, 39, 1, 21, 11, 18, 33, 37, 34, 5, 28, 12, 16, 26, 6, 41, 0, 20, 23, 29, 38, 36, 35, 8, 25, 17, 19, 30, 13, 40, 14])},
    't175': {'FTRank': torch.tensor([2, 21, 17, 33, 15, 31, 5, 7, 10, 35, 16, 11, 29, 1, 20, 4, 6, 32, 28, 36, 3, 27, 14, 41, 25, 8, 38, 0, 19, 22, 23, 37, 26, 34, 9, 24, 18, 40, 30, 12, 39, 13])},
    't176': {'FTRank': torch.tensor([2, 23, 16, 34, 5, 31, 4, 11, 15, 39, 19, 10, 9, 1, 27, 6, 7, 36, 17, 38, 3, 30, 25, 41, 29, 8, 22, 0, 20, 21, 24, 37, 13, 35, 12, 28, 26, 40, 33, 14, 32, 18])},
    't177': {'FTRank': torch.tensor([5, 23, 17, 34, 4, 30, 6, 32, 36, 16, 18, 11, 8, 1, 20, 3, 7, 33, 12, 29, 2, 39, 40, 24, 26, 9, 19, 0, 22, 21, 27, 37, 13, 35, 10, 41, 38, 25, 31, 15, 28, 14])},
    't178': {'FTRank': torch.tensor([5, 26, 18, 33, 7, 36, 6, 10, 27, 16, 24, 11, 39, 1, 23, 2, 4, 34, 13, 35, 3, 28, 32, 17, 29, 8, 41, 0, 20, 19, 21, 37, 15, 38, 9, 25, 31, 22, 30, 12, 40, 14])},
    't179': {'FTRank': torch.tensor([2, 23, 18, 31, 6, 32, 4, 20, 12, 39, 19, 10, 9, 1, 26, 5, 7, 35, 15, 38, 3, 34, 17, 41, 28, 8, 24, 0, 22, 25, 27, 37, 14, 36, 11, 30, 21, 40, 33, 13, 29, 16])},
    't180': {'FTRank': torch.tensor([6, 25, 17, 36, 3, 31, 10, 39, 11, 22, 16, 14, 7, 4, 23, 1, 2, 35, 8, 21, 5, 40, 24, 30, 20, 9, 13, 0, 27, 19, 28, 38, 12, 37, 15, 41, 32, 33, 34, 26, 29, 18])},
    't181': {'FTRank': torch.tensor([2, 21, 22, 34, 5, 32, 3, 6, 7, 40, 14, 11, 8, 1, 25, 19, 24, 35, 18, 38, 4, 29, 12, 41, 28, 9, 23, 0, 20, 26, 30, 37, 13, 36, 10, 27, 17, 39, 33, 16, 31, 15])},
    't182': {'FTRank': torch.tensor([3, 21, 17, 31, 24, 30, 2, 6, 9, 39, 18, 10, 7, 1, 25, 13, 12, 33, 37, 38, 4, 29, 14, 41, 27, 8, 20, 0, 19, 23, 22, 36, 34, 35, 5, 26, 16, 40, 32, 11, 28, 15])},
    't183': {'FTRank': torch.tensor([2, 30, 25, 39, 4, 34, 7, 5, 9, 15, 26, 14, 13, 1, 22, 3, 6, 40, 12, 36, 10, 32, 11, 19, 33, 8, 31, 0, 24, 27, 28, 41, 16, 38, 17, 29, 20, 21, 35, 18, 37, 23])},
    't184': {'FTRank': torch.tensor([5, 21, 17, 31, 26, 28, 2, 6, 7, 39, 15, 11, 8, 1, 24, 4, 9, 33, 37, 38, 3, 30, 14, 41, 27, 12, 23, 0, 19, 20, 22, 36, 35, 34, 10, 25, 16, 40, 32, 18, 29, 13])},
    't185': {'FTRank': torch.tensor([4, 24, 14, 33, 39, 30, 3, 28, 10, 12, 17, 9, 7, 1, 20, 2, 5, 34, 41, 31, 6, 36, 16, 22, 25, 8, 18, 0, 21, 19, 23, 38, 40, 35, 11, 37, 26, 29, 32, 15, 27, 13])},
    't186': {'FTRank': torch.tensor([28, 15, 6, 30, 1, 22, 4, 11, 9, 7, 16, 39, 8, 21, 37, 0, 5, 23, 10, 12, 2, 25, 14, 18, 13, 41, 29, 3, 38, 20, 24, 35, 19, 33, 17, 32, 26, 27, 31, 40, 36, 34])},
    't187': {'FTRank': torch.tensor([5, 31, 38, 36, 2, 32, 3, 6, 8, 11, 20, 19, 10, 1, 21, 13, 37, 39, 12, 30, 4, 25, 7, 14, 27, 23, 26, 0, 22, 28, 41, 40, 15, 35, 9, 24, 18, 17, 34, 29, 33, 16])},
    't188': {'FTRank': torch.tensor([3, 25, 19, 32, 6, 34, 2, 10, 13, 38, 21, 12, 11, 1, 28, 5, 8, 35, 17, 39, 4, 29, 18, 41, 31, 7, 24, 0, 22, 26, 23, 36, 14, 37, 9, 27, 20, 40, 33, 15, 30, 16])},
    't189': {'FTRank': torch.tensor([4, 27, 20, 36, 6, 32, 7, 40, 14, 17, 25, 12, 9, 1, 19, 3, 5, 35, 11, 24, 2, 39, 21, 31, 28, 8, 18, 0, 23, 22, 29, 38, 15, 37, 10, 41, 26, 33, 34, 16, 30, 13])},
    't190': {'FTRank': torch.tensor([4, 27, 30, 33, 5, 36, 3, 7, 11, 17, 23, 9, 39, 1, 21, 10, 26, 34, 14, 35, 2, 28, 13, 19, 29, 6, 41, 0, 20, 24, 32, 37, 16, 38, 8, 25, 18, 22, 31, 11, 40, 15])},
    't191': {'FTRank': torch.tensor([2, 18, 15, 32, 17, 30, 5, 6, 12, 36, 14, 9, 25, 1, 20, 4, 7, 33, 31, 38, 3, 27, 24, 41, 26, 8, 37, 0, 16, 19, 21, 35, 28, 34, 10, 22, 23, 40, 29, 11, 39, 13])},
    't192': {'FTRank': torch.tensor([3, 28, 36, 33, 1, 30, 15, 4, 39, 9, 8, 11, 6, 2, 10, 21, 37, 31, 5, 23, 20, 19, 41, 16, 12, 7, 24, 0, 22, 29, 38, 35, 13, 34, 25, 26, 40, 18, 27, 17, 32, 14])},
    't193': {'FTRank': torch.tensor([2, 29, 36, 34, 3, 30, 4, 10, 39, 12, 18, 8, 11, 1, 15, 23, 37, 31, 9, 26, 5, 25, 41, 17, 21, 6, 24, 0, 20, 28, 38, 35, 13, 33, 7, 22, 40, 19, 27, 14, 32, 16])},
    't194': {'FTRank': torch.tensor([8, 21, 17, 32, 6, 30, 4, 7, 10, 37, 18, 12, 29, 1, 25, 2, 5, 33, 14, 35, 3, 28, 16, 41, 27, 11, 39, 0, 22, 23, 24, 36, 13, 34, 9, 26, 20, 40, 31, 19, 38, 15])},
    't195': {'FTRank': torch.tensor([2, 28, 31, 37, 5, 36, 3, 8, 10, 15, 23, 9, 12, 1, 24, 11, 30, 40, 17, 38, 4, 29, 14, 21, 32, 6, 25, 0, 19, 27, 35, 41, 16, 39, 7, 26, 20, 22, 34, 13, 33, 18])},
    't196': {'FTRank': torch.tensor([2, 26, 30, 33, 39, 27, 3, 5, 6, 11, 13, 8, 12, 1, 16, 21, 36, 34, 41, 29, 4, 25, 10, 17, 24, 7, 22, 0, 19, 28, 37, 38, 40, 35, 9, 23, 18, 20, 31, 14, 32, 15])},
    't197': {'FTRank': torch.tensor([4, 21, 18, 32, 6, 31, 3, 8, 10, 39, 18, 12, 28, 1, 24, 2, 5, 33, 13, 36, 7, 29, 14, 41, 27, 9, 38, 0, 22, 23, 25, 35, 15, 34, 11, 26, 20, 40, 30, 16, 37, 17])},
    't198': {'FTRank': torch.tensor([7, 21, 13, 33, 6, 30, 4, 12, 8, 35, 18, 16, 29, 1, 25, 2, 5, 32, 10, 34, 3, 31, 11, 41, 26, 17, 39, 0, 24, 20, 22, 37, 14, 36, 9, 27, 19, 40, 28, 23, 38, 15])},
    't199': {'FTRank': torch.tensor([5, 23, 17, 33, 7, 35, 6, 15, 26, 13, 21, 10, 36, 1, 22, 3, 4, 34, 14, 37, 2, 29, 32, 18, 28, 8, 41, 0, 20, 19, 25, 38, 16, 39, 9, 27, 31, 24, 30, 11, 40, 12])},
    't200': {'FTRank': torch.tensor([2, 25, 29, 31, 37, 24, 3, 23, 7, 10, 15, 6, 9, 1, 17, 11, 32, 33, 41, 27, 4, 34, 13, 18, 26, 5, 20, 0, 16, 22, 38, 39, 40, 35, 8, 36, 19, 21, 30, 12, 28, 14])},
    't201': {'FTRank': torch.tensor([3, 23, 21, 34, 27, 30, 5, 2, 6, 11, 17, 10, 35, 1, 19, 8, 16, 33, 39, 32, 4, 28, 9, 15, 25, 7, 41, 0, 22, 24, 29, 37, 38, 36, 12, 26, 18, 20, 31, 14, 40, 13])},
    't202': {'FTRank': torch.tensor([3, 21, 15, 29, 24, 28, 2, 17, 9, 39, 16, 10, 6, 1, 25, 7, 11, 33, 34, 38, 4, 36, 14, 41, 26, 5, 20, 0, 19, 22, 23, 37, 31, 35, 8, 32, 18, 40, 30, 12, 27, 13])},
    't203': {'FTRank': torch.tensor([4, 25, 20, 32, 1, 34, 2, 6, 8, 39, 18, 15, 7, 0, 26, 10, 16, 35, 12, 37, 3, 29, 13, 41, 30, 17, 23, 5, 21, 24, 28, 36, 11, 38, 9, 27, 19, 40, 33, 22, 31, 14])},
    't204': {'FTRank': torch.tensor([5, 26, 18, 34, 3, 40, 8, 32, 10, 16, 22, 17, 7, 1, 28, 2, 4, 35, 9, 37, 6, 36, 15, 27, 30, 14, 20, 0, 24, 21, 25, 39, 12, 41, 13, 38, 19, 29, 33, 23, 31, 11])},
    't205': {'FTRank': torch.tensor([22, 23, 16, 34, 2, 30, 11, 4, 39, 9, 7, 31, 5, 1, 26, 10, 3, 27, 6, 17, 8, 18, 41, 15, 12, 33, 21, 0, 32, 24, 25, 38, 14, 37, 19, 29, 40, 20, 28, 36, 35, 13])},
    't206': {'FTRank': torch.tensor([2, 28, 19, 37, 4, 32, 3, 31, 12, 18, 24, 11, 10, 0, 23, 8, 6, 40, 13, 34, 1, 38, 16, 22, 30, 5, 29, 9, 20, 25, 27, 41, 14, 36, 7, 39, 21, 26, 35, 15, 33, 17])},
    't207': {'FTRank': torch.tensor([5, 23, 12, 31, 26, 30, 2, 6, 7, 39, 16, 11, 4, 1, 24, 8, 10, 33, 38, 37, 3, 28, 14, 41, 27, 17, 20, 0, 22, 18, 21, 36, 35, 34, 9, 25, 15, 40, 32, 19, 29, 13])},
    't208': {'FTRank': torch.tensor([5, 22, 14, 32, 26, 30, 2, 6, 7, 39, 15, 13, 9, 1, 24, 3, 8, 33, 38, 36, 4, 28, 12, 41, 27, 17, 21, 0, 18, 20, 23, 35, 37, 34, 10, 25, 16, 40, 31, 19, 29, 11])},
    't209': {'FTRank': torch.tensor([6, 24, 37, 38, 1, 30, 4, 5, 7, 12, 19, 21, 10, 0, 20, 8, 35, 40, 13, 31, 3, 27, 11, 16, 28, 29, 25, 2, 22, 26, 39, 41, 14, 36, 9, 23, 18, 17, 33, 32, 34, 15])},
    't210': {'FTRank': torch.tensor([24, 30, 16, 32, 0, 22, 3, 4, 5, 8, 26, 39, 7, 13, 35, 17, 6, 27, 9, 11, 2, 20, 10, 14, 23, 41, 21, 1, 38, 31, 28, 37, 15, 33, 12, 29, 19, 18, 36, 40, 34, 25])},
    't211': {'FTRank': torch.tensor([2, 23, 20, 34, 26, 30, 3, 6, 8, 12, 17, 9, 33, 1, 19, 7, 15, 38, 37, 32, 4, 27, 11, 16, 28, 5, 41, 0, 21, 24, 29, 39, 36, 35, 10, 25, 18, 22, 31, 13, 40, 14])},
    't212': {'FTRank': torch.tensor([2, 24, 14, 33, 39, 30, 8, 3, 6, 9, 15, 11, 7, 1, 22, 5, 4, 36, 41, 35, 18, 32, 10, 16, 29, 12, 23, 0, 21, 26, 27, 38, 40, 37, 19, 28, 17, 25, 34, 20, 31, 13])},
    't213': {'FTRank': torch.tensor([5, 25, 23, 32, 4, 33, 3, 7, 6, 39, 18, 12, 8, 1, 24, 13, 22, 35, 17, 38, 2, 29, 10, 41, 28, 15, 21, 0, 20, 26, 30, 36, 14, 37, 9, 27, 16, 40, 34, 19, 31, 11])},
    't214': {'FTRank': torch.tensor([3, 28, 21, 38, 4, 33, 7, 30, 10, 16, 22, 11, 9, 1, 24, 2, 5, 40, 12, 34, 6, 37, 15, 19, 31, 8, 27, 0, 20, 25, 29, 41, 14, 36, 13, 39, 23, 26, 35, 17, 32, 18])},
    't215': {'FTRank': torch.tensor([2, 23, 18, 30, 27, 32, 4, 6, 9, 12, 17, 10, 34, 1, 24, 3, 5, 33, 36, 37, 7, 28, 13, 19, 29, 8, 41, 0, 20, 22, 25, 38, 35, 39, 11, 26, 16, 21, 31, 14, 40, 15])},
    't216': {'FTRank': torch.tensor([2, 25, 22, 31, 5, 34, 3, 11, 9, 39, 19, 10, 7, 1, 26, 13, 18, 35, 16, 38, 4, 29, 17, 41, 30, 6, 23, 0, 21, 24, 28, 36, 12, 37, 8, 27, 20, 40, 33, 14, 32, 15])},
    't217': {'FTRank': torch.tensor([2, 25, 27, 35, 30, 34, 3, 6, 7, 12, 18, 10, 8, 1, 23, 9, 16, 41, 40, 36, 4, 28, 14, 20, 32, 5, 21, 0, 17, 26, 29, 39, 38, 37, 11, 24, 19, 22, 33, 13, 31, 15])},
    't218': {'FTRank': torch.tensor([3, 25, 26, 34, 5, 36, 4, 7, 22, 15, 21, 11, 39, 1, 19, 8, 18, 33, 12, 35, 2, 27, 29, 16, 30, 6, 41, 0, 17, 23, 31, 37, 14, 38, 9, 24, 28, 20, 32, 10, 40, 13])},
    't219': {'FTRank': torch.tensor([2, 19, 27, 31, 29, 26, 4, 23, 30, 10, 12, 7, 6, 1, 14, 8, 22, 32, 41, 25, 3, 34, 39, 17, 21, 5, 16, 0, 15, 18, 33, 36, 40, 35, 9, 37, 38, 20, 28, 13, 24, 11])},
    't220': {'FTRank': torch.tensor([2, 22, 17, 33, 5, 31, 7, 18, 20, 39, 16, 10, 9, 1, 24, 4, 6, 34, 13, 38, 3, 35, 29, 41, 26, 8, 21, 0, 19, 23, 25, 37, 12, 36, 11, 32, 27, 40, 30, 14, 28, 15])},
    't221': {'FTRank': torch.tensor([6, 28, 21, 33, 7, 36, 5, 9, 13, 18, 26, 12, 40, 1, 24, 3, 8, 34, 16, 35, 2, 30, 11, 19, 31, 4, 41, 0, 23, 22, 25, 37, 17, 38, 10, 29, 20, 27, 32, 14, 39, 15])},
    't222': {'FTRank': torch.tensor([0, 24, 18, 30, 2, 34, 1, 16, 10, 40, 20, 11, 7, 9, 27, 4, 6, 35, 14, 38, 3, 32, 17, 41, 29, 12, 23, 5, 22, 25, 26, 36, 13, 37, 8, 28, 21, 39, 33, 15, 31, 19])},
}

for d in DATA_FTD_SPECIFIC_RANK.keys():
    if d[0] == 't':
        continue
    if 'Finetuning' in DATA_FTD_SPECIFIC_RANK[d].keys():
        DATA_FTD_SPECIFIC_RANK[d]['Finetuning'] = DATA_FTD_SPECIFIC_RANK[d]['Finetuning'][SELECTED_INDICES]
    if 'FTRank' in DATA_FTD_SPECIFIC_RANK[d].keys():
        cur_ftrank = DATA_FTD_SPECIFIC_RANK[d]['FTRank'][SELECTED_INDICES]
        sort_cur = torch.sort(cur_ftrank)[1]
        resort = torch.zeros(len(BKB_FTD_SPECIFIC_RANK)).to(torch.long)
        resort[sort_cur] = torch.arange(len(BKB_FTD_SPECIFIC_RANK))
        DATA_FTD_SPECIFIC_RANK[d]['FTRank'] = resort.to(torch.long)

BKB_FTD_SPECIFIC_RANK2ID = {i: j for i, j in zip(BKB_FTD_SPECIFIC_RANK, range(len(BKB_FTD_SPECIFIC_RANK)))}

# heterogeneous:
FTD_DICT1 = {i: 2048 for i in BKB_FTD_SPECIFIC_RANK if 'resnet50' in i}
FTD_DICT2 = {i: 1920 for i in BKB_FTD_SPECIFIC_RANK if 'densenet201' in i}
FTD_DICT3 = {i: 2048 for i in BKB_FTD_SPECIFIC_RANK if 'inception_v3' in i}

MODEL2FEAT_DIM = {
    'googlenet': 1024,
    'inception_v3': 2048,
    'resnet50': 2048,
    'resnet101': 2048,
    'resnet152': 2048,
    'densenet121': 1024,
    'densenet169': 1664,
    'densenet201': 1920,
    'mobilenet_v2': 1280,
    'mnasnet1_0': 1280,
    'swin_base_7_checkpoint': 3072,
    'swin_tiny_7_checkpoint': 2304,
    **FTD_DICT1,
    **FTD_DICT2,
    **FTD_DICT3
}

MODELS42 = os.environ.get("MODELS42")
if MODELS42 == 'yes':
    DATA_SPECIFIC_RANK = DATA_FTD_SPECIFIC_RANK
    BKB_SPECIFIC_RANK  = BKB_FTD_SPECIFIC_RANK
    BKB_SPECIFIC_RANK2ID = BKB_FTD_SPECIFIC_RANK2ID
